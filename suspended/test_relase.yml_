name: test release
on:
  watch:
    types: [started]
jobs:
  Ubuntu:
    runs-on: ubuntu-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y install bc 
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Init Source
        run: |
          mkdir friendlywrt-rk3328
          cd friendlywrt-rk3328
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m rk3328.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          
      - name: Mods
        run: |
          exit 0
          cd friendlywrt-rk3328
          . ../remove_unused_config.sh
          sed -i '/iptparser/d' configs/config_rk3328
          echo '
          CONFIG_OPENSSL_ENGINE_BUILTIN=y
          CONFIG_OPENSSL_WITH_DTLS=y
          CONFIG_OPENSSL_WITH_EC2M=y
          CONFIG_OPENSSL_WITH_NPN=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_lrzsz=y
          CONFIG_PACKAGE_nano=y
          CONFIG_PACKAGE_vim-fuller=y
          CONFIG_PACKAGE_luci-app-cifsd=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-ipsec-vpnd=y
          CONFIG_PACKAGE_luci-app-netdata=y
          CONFIG_PACKAGE_luci-app-pptp-server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Simple_obfs=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray_plugin=y
          CONFIG_PACKAGE_luci-app-syncdial=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          # CONFIG_OPENSSL_ENGINE_BUILTIN_DEVCRYPTO is not set
          # CONFIG_PACKAGE_kmod-cryptodev is not set
          # CONFIG_PACKAGE_libopenssl-devcrypto is not set
          # CONFIG_V2RAY_COMPRESS_UPX is not set' >> configs/config_rk3328
          cd friendlywrt
          git config --local user.email "action@github.com" && git config --local user.name "GitHub Action"
          git remote add upstream https://github.com/coolsnowwolf/lede && git fetch upstream
          git rebase 90bb1cf9c33e73de5019686b8bd495f689e675a4^ --onto upstream/master -X theirs
          git checkout upstream/master -- feeds.conf.default
          git apply ../../0001-fix-upx.patch
          sed -i '/exit/i\chown -R root:root /usr/share/netdata/web' package/lean/default-settings/files/zzz-default-settings
          sed -i 's/option fullcone\t1/option fullcone\t0/' package/network/config/firewall/files/firewall.config
          sed -i '/8.8.8.8/d' package/base-files/files/root/setup.sh
          echo -e '\nDYC Build\n'  >> package/base-files/files/etc/banner
          
      - name: Clean Feeds
        run: |
          cd friendlywrt-rk3328/
          #./scripts/feeds clean -a
                    
      - name: Build FriendlyWrt
        run: |
          cd friendlywrt-rk3328
          #sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          #./build.sh nanopi_r2s.mk
      
      - name: Zip Files
        run: |
          #gzip friendlywrt-rk3328
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          touch ./artifact/tmpf.img
          touch ./artifact/.config
          zip -r artifact.zip ./artifact/

          release_tag="R2S-Lean-$(date +%Y-%m-%d)"
          echo "##[set-output name=release_tag;]$release_tag"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          tag_name: ${{ steps.assemble_artifact.outputs.release_tag }}
          release_name: 自动发布 ${{ steps.assemble_artifact.outputs.release_tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.sec_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./artifact.zip
          asset_name: ${{ steps.assemble_artifact.outputs.release_tag }}-ROM.zip
          asset_content_type: application/zip
